SET SERVEROUTPUT ON;
---------------------
-- Doctor Policy VPD
---------------------

-- 1. Only SELECT, UPDATE patient information for their responsibility
-- VPD Function
CREATE OR REPLACE FUNCTION FUNC_VPD_POLICY_DOCTOR_HOSOBENHNHAN(
    v_schema IN VARCHAR2,
    v_object IN VARCHAR2
)
RETURN VARCHAR2 
AS
    predicate VARCHAR2(200);
    cur_user VARCHAR2(200);
BEGIN
-- ''' ERROR  @@ TROI OI!! CAI ''' NAY LA NGUYEN NHAN 
    cur_user:= SYS_CONTEXT('USERENV','SESSION_USER');
    IF (INSTR(cur_user,'BACSI')<>0) THEN
      predicate:= 'TENBACSI = ''' ||cur_user||'''';
    ELSE
     predicate:= '';
    END IF;
    RETURN predicate;
END FUNC_VPD_POLICY_DOCTOR_HOSOBENHNHAN;
/

BEGIN
    DBMS_RLS.add_policy(
    object_schema    => 'DUCCAO_ADMIN', 
    object_name      => 'HOSOBENHNHAN',
    policy_name      => 'POLICY_VPD_DOCTOR_HOSOBENHNHAN',
    policy_function  => 'FUNC_VPD_POLICY_DOCTOR_HOSOBENHNHAN',
    statement_types => 'SELECT,UPDATE',
    update_check => TRUE);
END;
/

-- 2. Only SELECT, INSERT, UPDATE ON CTDONTHUOC for their responsibility
-- 2. Only SELECT, INSERT, UPDATE ON CTDONTHUOC for their responsibility
CREATE OR REPLACE FUNCTION FUNC_VPD_DOCTOR_CTDONTHUOC(
    IPSCHEMA IN VARCHAR2,
    IPOBJ IN VARCHAR2
)
RETURN VARCHAR2
AS
PREDICATE VARCHAR2(200);
CURR VARCHAR2(200);
BEGIN
    CURR:=UPPER(SYS_CONTEXT('USERENV','SESSION_USER'));
    
    IF (INSTR(CURR,'BACSI')<>0) THEN
    PREDICATE := ' TENBACSI '''||CURR||'''';
    ELSE
    PREDICATE :='';
    END IF;
    RETURN PREDICATE;
END FUNC_VPD_DOCTOR_CTDONTHUOC;
/


-- VIEW VIEW_VPD_DOCTOR_CTDONTHUOC
CREATE OR REPLACE VIEW VIEW_VPD_DOCTOR_CTDONTHUOC
AS
SELECT CTDONTHUOC.MAKB, CTDONTHUOC.MATHUOC, CTDONTHUOC.SOLUONG, CTDONTHUOC.LIEUDUNG, CTDONTHUOC.MOTA, 
HOSOBENHNHAN.NGAYKB, HOSOBENHNHAN.MANV, HOSOBENHNHAN.TENBACSI, HOSOBENHNHAN.MABN, HOSOBENHNHAN.TINHTRANGBANDAU
,HOSOBENHNHAN.KETLUANCUABACSI
FROM CTDONTHUOC 
LEFT JOIN HOSOBENHNHAN 
ON HOSOBENHNHAN.MAKB = CTDONTHUOC.MAKB;


GRANT SELECT ON VIEW_VPD_DOCTOR_CTDONTHUOC TO ROLE_DOCTOR;
-- ADD POLICY
BEGIN
    DBMS_RLS.ADD_POLICY (
        OBJECT_SCHEMA =>'DUCCAO_ADMIN',
        OBJECT_NAME => 'VIEW_VPD_DOCTOR_CTDONTHUOC',
        POLICY_NAME => 'POLICY_VPD_DOCTOR_CTDONTHUOC',
        POLICY_FUNCTION =>'FUNC_VPD_DOCTOR_CTDONTHUOC',
        STATEMENT_TYPES =>'SELECT, INSERT, UPDATE',
        UPDATE_CHECK =>TRUE );
END;
/



SELECT CTDONTHUOC.MAKB, CTDONTHUOC.MATHUOC, CTDONTHUOC.SOLUONG, CTDONTHUOC.LIEUDUNG, CTDONTHUOC.MOTA, 
HOSOBENHNHAN.NGAYKB, HOSOBENHNHAN.MANV, HOSOBENHNHAN.TENBACSI, HOSOBENHNHAN.MABN, HOSOBENHNHAN.TINHTRANGBANDAU
,HOSOBENHNHAN.KETLUANCUABACSI
FROM CTDONTHUOC 
LEFT JOIN HOSOBENHNHAN 
ON HOSOBENHNHAN.MAKB = CTDONTHUOC.MAKB
WHERE TENBACSI ='USER_BACSI_01';


SELECT * FROM CTDONTHUOC;
SELECT * FROM HOSOBENHNHAN;
SELECT * FROM HOSODICHVU;
SELECT * FROM THUOC;

SELECT *
FROM CTDONTHUOC 
LEFT JOIN HOSOBENHNHAN 
ON HOSOBENHNHAN.MAKB = CTDONTHUOC.MAKB
WHERE HOSOBENHNHAN.TENBACSI = 'USER_BACSI_01';





GRANT SELECT ON DUCCAO_ADMIN.HOSOBENHNHAN TO USER_BACSI_01;
GRANT ROLE_DOCTOR TO USER_BACSI_01;

CONNECT USER_BACSI_01/USER_BACSI_01
-- SET ROLE ROLE_DOCTOR IDENTIFIED BY ROLE_DOCTOR;
SELECT * FROM DUCCAO_ADMIN.HOSOBENHNHAN;

GRANT SELECT ON DUCCAO_ADMIN.HOSOBENHNHAN  TO USER_BACSI_01;

CONN USER_BACSI_01/USER_BACSI_01;
SELECT * FROM DUCCAO_ADMIN.HOSOBENHNHAN 
WHERE TENBACSI = TRIM(SYS_CONTEXT('USERENV','SESSION_USER'));

SELECT * FROM DUCCAO_ADMIN.HOSOBENHNHAN ;

-- check trace file
SELECT VALUE FROM V$DIAG_INFO WHERE NAME = 'Default Trace File';
-- check policy list
SELECT * FROM ALL_POLICIES ;



